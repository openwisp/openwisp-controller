---

name: OpenWISP Controller CI Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  build:
    name: Python==${{ matrix.python-version }} | ${{ matrix.django-version }}
    runs-on: ubuntu-20.04

    services:
      redis:
        image: redis
        ports:
          - 6379:6379

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
        django-version:
          - django~=3.2.0
          - django~=4.0.0
        include:
          - django-version: django~=3.2.0
            python-version: 3.7

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system packages
      run: |
        sudo apt update
        sudo apt-get -qq -y install sqlite3 gdal-bin libproj-dev \
          libgeos-dev libspatialite-dev spatialite-bin \
          libsqlite3-mod-spatialite

    - name: Install npm dependencies
      run: sudo npm install -g jshint stylelint

    - name: Upgrade python system packages
      run: pip install -U pip wheel setuptools

    - name: Install openwisp-controller
      run: |
        pip install -e .

    - name: Install test dependencies
      run: |
        pip install -U -r requirements-test.txt
        pip install ${{ matrix.django-version }}

    - name: QA checks
      run: |
        ./run-qa-checks
    - name: Tests
      run: |
        coverage run --source=openwisp_controller runtests.py
        # SAMPLE tests
        SAMPLE_APP=1 ./runtests.py --keepdb
      env:
        SELENIUM_HEADLESS: 1

    - name: Upload Coverage
      run: coveralls --service=github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COVERALLS_FLAG_NAME: python-${{ matrix.python-version }}-${{ matrix.django-version }}
        COVERALLS_PARALLEL: true

  coveralls:
    name: Finish Coveralls
    needs: build
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Finished
        run: |
          pip3 install --upgrade coveralls
          coveralls --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
