# Generated by Django 3.2.20 on 2023-08-24 12:35

from django.conf import settings
from django.db import migrations, models

def remove_conflicting_deviceconnections(apps, schema_editor):
    DeviceConnection = apps.get_model('connection', 'DeviceConnection')
    duplicates = (
        DeviceConnection.objects.values('device_id', 'credentials_id')
        .annotate(count=models.Count('id'))
        .filter(count__gt=1)
    )
    for duplicate in duplicates:
        # Get all instances of this duplicate and order them by ID
        instances = (
            DeviceConnection.objects.filter(
                device_id=duplicate['device_id'],
                credentials_id=duplicate['credentials_id']
            ).order_by('id')
        )
        # Keep the first instance and delete the rest
        for instance in instances[1:]:
            instance.delete()


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.CONFIG_DEVICE_MODEL),
        ('connection', '0007_command'),
    ]

    operations = [
        migrations.RunPython(remove_conflicting_deviceconnections),
        migrations.AlterUniqueTogether(
            name='deviceconnection',
            unique_together={('device', 'credentials')},
        ),
    ]
